plugins {
    id "groovy"
    id "java-library"
    id "com.bertramlabs.asset-pipeline" version "4.3.0"
    id "org.grails.grails-plugin"
    id "idea"
    id "eclipse"
    id "org.grails.grails-gsp"
}

group = "dialog"
repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core/" }
    mavenLocal()
    gradlePluginPortal()
}

configurations {
    all {
    }
}

dependencies {
    compileOnly("org.grails:grails-core")
    compileOnly("org.grails:grails-logging")
    compileOnly("org.grails:grails-plugin-databinding")
    compileOnly("org.grails:grails-plugin-i18n")
    compileOnly("org.grails:grails-plugin-interceptors")
    compileOnly("org.grails:grails-plugin-rest")
    compileOnly("org.grails:grails-plugin-services")
    compileOnly("org.grails:grails-plugin-url-mappings")
    compileOnly("org.grails:grails-web-boot")
    compileOnly("org.grails.plugins:hibernate5")
    compileOnly("org.hibernate:hibernate-core:5.6.15.Final")
    compileOnly("org.springframework.boot:spring-boot-autoconfigure")
    compileOnly("org.springframework.boot:spring-boot-starter-logging")
    compileOnly("org.springframework.boot:spring-boot-starter-validation")
    compileOnly("io.micronaut:micronaut-inject-groovy")
    testImplementation("io.micronaut:micronaut-inject-groovy")
    testImplementation("org.grails:grails-gorm-testing-support")
    testImplementation("org.spockframework:spock-core")
    testImplementation("io.micronaut:micronaut-http-client")

    implementation("commons-io:commons-io") {
        version {
           strictly '[2.15, 2.16['
           prefer '2.15.1'
        }
    }
    implementation("org.apache.commons:commons-lang3:3.14.0")
}

java {
    sourceCompatibility = JavaVersion.toVersion("11")
}

tasks.withType(Test) {
    useJUnitPlatform()
}

assets {
    packagePlugin = true
    minifyJs = true
    minifyCss = true
    excludes = ["ext/**","*-local/**"]
    includes = ["ext/**/*.jpg","ext/**/*.jpeg","ext/**/*.png","ext/**/*.ttf","ext/**/*.svg","ext/**/*.woff","ext/**/*.eot","ext/**/*.svg","ext/ckeditor/**/*.*"]
}

bootJar.enabled = false
jar.enabled = true

tasks.jar {
    archiveFileName.set("dialog.jar")
    doLast {
        
    }
}

